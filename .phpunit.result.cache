{"version":1,"defects":[],"times":{"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #0":0,"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #1":0,"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #2":0,"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #3":0,"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #4":0,"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #5":0,"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #6":0,"Zing\\Matcher\\Tests\\ProofOfConceptTest::testMatching with data set #7":0,"Zing\\Matcher\\Tests\\SuggesterTest::testSuggestMetaphone":0,"Zing\\Matcher\\Tests\\Exception\\TieExceptionTest::testGetTieResults":0.001,"Zing\\Matcher\\Tests\\MatcherTest::testMatchCaseSensitive":0,"Zing\\Matcher\\Tests\\MatcherTest::testMatchCaseSensitiveMB":0,"Zing\\Matcher\\Tests\\MatcherTest::testMatchCaseInsensitive":0,"Zing\\Matcher\\Tests\\MatcherTest::testMatchCaseInsensitiveMB":0,"Zing\\Matcher\\Tests\\MatcherTest::testMatchNotExact":0,"Zing\\Matcher\\Tests\\MatcherTest::testMatchNotExactMB":0,"Zing\\Matcher\\Tests\\MatcherTest::testTieBreakerDefault":0,"Zing\\Matcher\\Tests\\MatcherTest::testTieBreakerLast":0,"Zing\\Matcher\\Tests\\MatcherTest::testWillThrowOnEmptyHaystack":0,"Zing\\Matcher\\Tests\\MatcherTest::testAllowExactMatchTies":0,"Zing\\Matcher\\Tests\\Polyfill\\MbLevenshteinTest::testExactMatch":0,"Zing\\Matcher\\Tests\\Polyfill\\MbLevenshteinTest::testUtf8CharacterCountsOnce":0,"Zing\\Matcher\\Tests\\Polyfill\\MbLevenshteinTest::testEmptyString1":0,"Zing\\Matcher\\Tests\\Polyfill\\MbLevenshteinTest::testEmptyString2":0,"Zing\\Matcher\\Tests\\Polyfill\\MbLevenshteinTest::testInsertionCost":0,"Zing\\Matcher\\Tests\\Polyfill\\MbLevenshteinTest::testReplacementCost":0,"Zing\\Matcher\\Tests\\Polyfill\\MbLevenshteinTest::testDeletionCost":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testExactMatch":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testSimilar with data set #0":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testSimilar with data set #1":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testSimilar with data set #2":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testSimilar with data set #3":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testUtf8CharacterCountsOnce":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testEmptyString1":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testEmptyString2":0,"Zing\\Matcher\\Tests\\Polyfill\\MbSimilarTextTest::testEmptyStrings":0,"Zing\\Matcher\\Tests\\Preprocessor\\MetaphonePreprocessorTest::testMetaphonePreprocessor":0,"Zing\\Matcher\\Tests\\Preprocessor\\MetaphonePreprocessorTest::testMetaphonePreprocessorMaxPhonemes":0,"Zing\\Matcher\\Tests\\Preprocessor\\StrToLowerPreprocessorTest::testStrToLowerPreprocesssor":0,"Zing\\Matcher\\Tests\\SimilarityComparer\\Levenshtein\\LevensteinSimilarityResultTest::testValueObject":0,"Zing\\Matcher\\Tests\\SuggesterTest::testSuggestCaseSensitive":0,"Zing\\Matcher\\Tests\\SuggesterTest::testWillThrowOnEmptyHaystack":0,"Zing\\Matcher\\Tests\\TieBreaker\\FirstMatchTest::testFirstMatchReturned":0,"Zing\\Matcher\\Tests\\TieBreaker\\FirstMatchTest::testWillThrowOnEmptyResults":0,"Zing\\Matcher\\Tests\\TieBreaker\\LastMatchTest::testLastMatchReturned":0,"Zing\\Matcher\\Tests\\TieBreaker\\LastMatchTest::testWillThrowOnEmptyResults":0,"Zing\\Matcher\\Tests\\TieBreaker\\ThrowExceptionTest::testWillThrowTieException":0,"Zing\\Matcher\\Tests\\TieBreaker\\ThrowExceptionTest::testWillThrowOnEmptyResults":0}}